/**
 * NOTE: This class is auto generated by the swagger code generator program (3.0.36).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package ru.practicum.explorewithme.api;

import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import ru.practicum.explorewithme.model.*;

import javax.validation.Valid;
import javax.validation.constraints.NotNull;
import java.util.List;

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.SpringCodegen", date = "2022-11-13T14:31:14.091Z[GMT]")
@Validated
public interface UsersApi {

    @RequestMapping(value = "/users/{userId}/events",
            produces = {"application/json"},
            consumes = {"application/json"},
            method = RequestMethod.POST)
    ResponseEntity<EventFullDto> addEvent(@PathVariable("userId") Long userId, @Valid @RequestBody NewEventDto body);

    @RequestMapping(value = "/users/{userId}/requests",
            produces = {"application/json"},
            method = RequestMethod.POST)
    ResponseEntity<ParticipationRequestDto> addParticipationRequest(@PathVariable("userId") Long userId, @NotNull @Valid @RequestParam(value = "eventId", required = true) Long eventId);

    @RequestMapping(value = "/users/{userId}/events/{eventId}",
            produces = {"application/json"},
            method = RequestMethod.PATCH)
    ResponseEntity<EventFullDto> cancelEvent(@PathVariable("userId") Long userId, @PathVariable("eventId") Long eventId);

    @RequestMapping(value = "/users/{userId}/events/{eventId}/requests/{reqId}/reject",
            produces = {"application/json"},
            method = RequestMethod.PATCH)
    ResponseEntity<ParticipationRequestDto> cancelParticipationRequest(@PathVariable("userId") Long userId, @PathVariable("eventId") Long eventId, @PathVariable("reqId") Long reqId);

    @RequestMapping(value = "/users/{userId}/requests/{requestId}/cancel",
            produces = {"application/json"},
            method = RequestMethod.PATCH)
    ResponseEntity<ParticipationRequestDto> cancelRequest(@PathVariable("userId") Long userId, @PathVariable("requestId") Long requestId);

    @RequestMapping(value = "/users/{userId}/events/{eventId}/requests/{reqId}/confirm",
            produces = {"application/json"},
            method = RequestMethod.PATCH)
    ResponseEntity<ParticipationRequestDto> confirmParticipationRequest(@PathVariable("userId") Long userId, @PathVariable("eventId") Long eventId, @PathVariable("reqId") Long reqId);

    @RequestMapping(value = "/users/{userId}/events/{eventId}",
            produces = {"application/json"},
            method = RequestMethod.GET)
    ResponseEntity<EventFullDto> getEvent(@PathVariable("userId") Long userId, @PathVariable("eventId") Long eventId);

    @RequestMapping(value = "/users/{userId}/events/{eventId}/requests",
            produces = {"application/json"},
            method = RequestMethod.GET)
    ResponseEntity<List<ParticipationRequestDto>> getEventParticipants(@PathVariable("userId") Long userId, @PathVariable("eventId") Long eventId);

    @RequestMapping(value = "/users/{userId}/events",
            produces = {"application/json"},
            method = RequestMethod.GET)
    ResponseEntity<List<EventShortDto>> getEvents(@PathVariable("userId") Long userId, @Valid @RequestParam(value = "from", required = false, defaultValue = "0") Integer from, @Valid @RequestParam(value = "size", required = false, defaultValue = "10") Integer size);

    @RequestMapping(value = "/users/{userId}/requests",
            produces = {"application/json"},
            method = RequestMethod.GET)
    ResponseEntity<List<ParticipationRequestDto>> getUserRequests(@PathVariable("userId") Long userId);

    @RequestMapping(value = "/users/{userId}/events",
            produces = {"application/json"},
            consumes = {"application/json"},
            method = RequestMethod.PATCH)
    ResponseEntity<EventFullDto> updateEvent1(@PathVariable("userId") Long userId, @Valid @RequestBody UpdateEventRequest body);

}

